plugins {
    id 'java'
    id 'idea'
    id 'com.google.protobuf' version '0.8.18'
    id 'application'
    id 'io.freefair.lombok' version '6.4.3'

    // Allows use of log4j-bom
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
}

application {
    mainClass = 'com.examples.raft.RaftServer'
    // Required to run the application with Guice, since it uses deep reflection
    // Don't ask me why, but my research just alludes that this feature was a bit
    // premature for things like Guice.
    // https://github.com/google/guice/issues/1133#issuecomment-434640864
    applicationDefaultJvmArgs = [
            '--add-opens',
            'java.base/java.lang=ALL-UNNAMED',
            '-Dcom.sun.management.jmxremote',
            '-Dcom.sun.management.jmxremote.authenticate=false',
            '-Dcom.sun.management.jmxremote.port=8484',
            '-Dcom.sun.management.jmxremote.ssl=false'
    ]
}

group 'com.examples.raft'
version '1.0-SNAPSHOT'

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

def grpcVersion = '1.45.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.19.2'
def protocVersion = protobufVersion

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.17.2'
    }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'

    // https://mvnrepository.com/artifact/com.google.inject/guice
    implementation 'com.google.inject:guice:4.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.amazon.ion:ion-java:1.9.4'
    implementation 'commons-cli:commons-cli:1.5.0'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

task raftServer(type: CreateStartScripts) {
    mainClass = 'com.examples.raft.RaftServer'
    applicationName = 'raft-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

// run ./gradlew installDist to install into the build folder
applicationDistribution.into('bin') {
    from(raftServer)
    fileMode = 0755
}

test {
    useJUnitPlatform()
}